server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://193.136.194.103:3100/loki/api/v1/push
  - url: http://193.136.194.104:3100/loki/api/v1/push

scrape_configs:
  # Docker container logs using service discovery
  - job_name: docker
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
    relabel_configs:
      # Use container name as a label
      - source_labels: ["__meta_docker_container_name"]
        target_label: "container_name"
        regex: "/(.*)"
        replacement: "$1"
      # Use container ID
      - source_labels: ["__meta_docker_container_id"]
        target_label: "container_id"
      # Set the log path
      - source_labels: ["__meta_docker_container_id"]
        target_label: "__path__"
        replacement: "/var/lib/docker/containers/$1/*-json.log"
      # Add job label
      - replacement: "docker"
        target_label: "job"
      # Add node label
      - replacement: "backend"
        target_label: "node"
    pipeline_stages:
      # Parse Docker JSON log format
      - json:
          expressions:
            log: log
            stream: stream
            time: time
      # Parse timestamp
      - timestamp:
          format: RFC3339Nano
          source: time
      # Add stream label
      - labels:
          stream:
      # Output the actual log message
      - output:
          source: log

  # System logs (host-level, not containerized)
  - job_name: syslog
    static_configs:
      - targets:
          - localhost
        labels:
          job: syslog
          node: backend
          __path__: /var/log/syslog
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\S+\s+\d+\s+\d+:\d+:\d+)\s+(?P<hostname>\S+)\s+(?P<service>\S+)(\[(?P<pid>\d+)\])?\:\s*(?P<message>.*)$'
      - timestamp:
          format: Jan 2 15:04:05
          source: timestamp
      - labels:
          hostname:
          service:

  # NOTE: The following static log paths are commented out because Keycloak,
  # PostgreSQL/Patroni, and etcd run as containers. Their logs are already
  # collected via Docker service discovery (docker_sd_configs) above, which
  # reads from /var/lib/docker/containers/<container-id>/*-json.log

  # # Keycloak logs (DISABLED - collected via Docker SD)
  # - job_name: keycloak
  #   static_configs:
  #     - targets:
  #         - localhost
  #       labels:
  #         job: keycloak
  #         service: keycloak
  #         __path__: /opt/keycloak/data/log/*.log
  #   pipeline_stages:
  #     - regex:
  #         expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2}\s+\d{2}:\d{2}:\d{2},\d{3})\s+(?P<level>\S+)\s+\[(?P<thread>[^\]]+)\]\s+(?P<logger>\S+)\s+(?P<message>.*)$'
  #     - timestamp:
  #         format: 2006-01-02 15:04:05,000
  #         source: timestamp
  #     - labels:
  #         level:
  #         logger:

  # # PostgreSQL/Patroni logs (DISABLED - collected via Docker SD)
  # - job_name: patroni
  #   static_configs:
  #     - targets:
  #         - localhost
  #       labels:
  #         job: patroni
  #         service: postgresql
  #         __path__: /var/log/postgresql/*.log
  #   pipeline_stages:
  #     - regex:
  #         expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2}\s+\d{2}:\d{2}:\d{2}\.\d{3})\s+(?P<timezone>\S+)\s+\[(?P<pid>\d+)\]\s+(?P<level>\S+):\s+(?P<message>.*)$'
  #     - timestamp:
  #         format: 2006-01-02 15:04:05.000
  #         source: timestamp
  #     - labels:
  #         level:
  #         pid:

  # # etcd logs (DISABLED - collected via Docker SD)
  # - job_name: etcd
  #   static_configs:
  #     - targets:
  #         - localhost
  #       labels:
  #         job: etcd
  #         service: etcd
  #         __path__: /var/log/etcd/*.log
  #   pipeline_stages:
  #     - regex:
  #         expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2}\s+\d{2}:\d{2}:\d{2}\.\d{6})\s+(?P<level>\S+)\s+\|\s+(?P<component>\S+):\s+(?P<message>.*)$'
  #     - timestamp:
  #         format: 2006-01-02 15:04:05.000000
  #         source: timestamp
  #     - labels:
  #         level:
  #         component:
